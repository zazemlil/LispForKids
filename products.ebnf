S -> EXPR

EXPR -> ATOM
        | "(" LIST ")"
        | "(" APPLICATION ")"

ATOM -> id | num

LIST -> EXPR LIST
        | ε

APPLICATION -> CONST 
        | UNARYOP EXPR
        | BINARYOP EXPR EXPR
        | TERNARYOP EXPR EXPR EXPR
        | "lambda" "(" PARAMS ")" EXPR
        | "let" EXPR BINDINGS 
        | "letrec" EXPR BINDINGS 

CONST -> "quote" KEYWORD
        | "quote" ATOM
        | "quote" "(" CONSTS ")"

CONSTS -> KEYWORD CONSTS
        | ATOM CONSTS
        | "(" CONSTS ")" CONSTS
        | ε

KEYWORD -> UNARYOP | BINARYOP | TERNARYOP | "quote" | "lambda" | "let" | "letrec"

UNARYOP -> "car" | "cdr" | "atom"
BINARYOP -> "add" | "sub" | "mul" | "dive" | "rem" | "le" | "cons" | "equal"
TERNARYOP -> "cond"

PARAMS -> id PARAMS
        | ε

BINDINGS -> BIND BINDINGS`
BINDINGS` -> BIND BINDINGS`
        | ε
BIND -> "(" id EXPR ")"

num -> [-]?[0-9]+ 
id  -> [a-zA-z][a-zA-z|0-9]*